@page "/administration/quotes/create"
@layout AdminLayout
@attribute [Authorize]


@inject IJSRuntime js
@inject HttpAuthorizer authorizer
@inject MahwousRepositories repositories
@inject NavigationManager navigation
<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">حالة كتابية جديد</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item active">اضافة حالة كتابية</li>
                    <li class="breadcrumb-item"><a href="administration/quotes">الحالات الكتابية</a></li>
                    <li class="breadcrumb-item"><a href="administration">الإدارة</a></li>
                    <li class="breadcrumb-item"><a href="">الصفحة الرئيسية</a></li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="container-fluid">



        @if (NotSelectedCategories != null)
        {
            <QuoteForm ButtonText="إضافة حالة" Quote="quote"
                       OnValidSubmit="CreateQuote" NotSelectedCategories="NotSelectedCategories" />
        }



    </div>
</div>





@code {

    QuoteStatus quote = new QuoteStatus();


    private List<Category> NotSelectedCategories;


    protected async override Task OnInitializedAsync()
    {

        CategoryFilter filter = new CategoryFilter();
        filter.ForQuotes = true;
        filter.Pagination.RecordsPerPage = 100;



        var paginatedResponse = await repositories.CategoriesRepository.GetFiltered(filter);
        NotSelectedCategories = paginatedResponse.Response.ToList();



        // to give tokens to api :)
        await authorizer.SetAuthorizationAsync();
    }

    async Task CreateQuote()
    {

        try
        {

            await repositories.QuotesRepository.Add(quote);
            navigation.NavigateTo("administration/quotes");

        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }








    }
}