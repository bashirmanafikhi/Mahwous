@page "/administration/categories"
@layout AdminLayout
@attribute [Authorize]

@inject IJSRuntime js
@inject NavigationManager navigation
@*@inject MahwousRepositories repositories*@
@*@inject HttpAuthorizer authorizer*@
@inject AuthorizedRepositories authorizedRepositories
@inject NotAuthorizedRepositories notAuthorizedRepositories


<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item"><a href="">الصفحة الرئيسية</a></li>
    <li class="breadcrumb-item"><a href="administration">الإدارة</a></li>
    <li class="breadcrumb-item active">التصنيفات</li>
</ol>

<div class="container">
    <div class="row">
        <div class="col-lg-9">


            <div class="card">
                <div class="card-header">
                    <Pagination CurrentPage="@categoryFilter.Pagination.Page" TotalAmountPages="totalAmountPages"
                                SelectedPage="SelectedPage" />
                </div>
                <!-- /.card-header -->
                <div class="card-body">


                    @if (categories == null)
                    {
                        <p>جاري تحميل التصنيفات...</p>
                    }
                    else if (categories.Count == 0)
                    {
                        <p> لا يوجد تصنيفات! </p>
                    }
                    else
                    {
                        <div class="card-columns">
                            @foreach (Category category in categories)
                            {
                                <div class="card">
                                    <div class="card-header p-0">
                                        <img src="@category.CoverPath" style="height:auto; width:100%; object-fit:cover" />
                                    </div>
                                    <div class="card-body">
                                        <h4 class="card-title">@category.Name</h4>
                                        <i class="material-icons ">categories</i>
                                        <p class="card-category">
                                            @if (category.ForImages)
                                            {<span class="text-secondary">صور | </span>}
                                            @if (category.ForQuotes)
                                            {<span class="text-secondary">كتابية | </span>}
                                            @if (category.ForVideos)
                                            {<span class="text-secondary">فيديو </span>}
                                        </p>
                                    </div>
                                    <div class="card-footer">
                                        <div class="stats">
                                            <button class="btn btn-danger" @onclick="@(() => DeleteCategory(category.Id))">حذف</button>
                                            <a class="btn btn-info" href="administration/categories/edit/@category.Id">تعديل</a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>

                    }

                </div>
                <!-- /.card-body -->
                <div class="card-footer">
                    <Pagination CurrentPage="@categoryFilter.Pagination.Page" TotalAmountPages="totalAmountPages"
                                SelectedPage="SelectedPage" />
                </div>
                <!-- /.card-footer -->
            </div>
            <!-- /.card -->

        </div>
        <div class="col-lg-3">
            <a href="administration/categories/create" class="btn btn-primary btn-block mb-3">اضافة تصنيف جديد</a>

            <EditForm Model="categoryFilter">

                <div class="card my-2">
                    <div class="card-header">
                        <h3 class="card-title">فلترة</h3>
                    </div>

                    <div class="card-body">


                        <div class="form-group">
                            <label for="Content">Name</label>
                            <input type="text" class="form-control" id="Name" placeholder="category Name"
                                   @bind-value="categoryFilter.Name" @bind-value:event="oninput"
                                   @onkeypress="@((KeyboardEventArgs e) => NameKeyPress(e))" />
                        </div>


                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="ForImages" @bind="categoryFilter.ForImages" />
                            <label class="form-check-label" for="ForImages">For Images</label>
                        </div>

                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="ForQuotes" @bind="categoryFilter.ForQuotes" />
                            <label class="form-check-label" for="ForQuotes">For Quotes</label>
                        </div>

                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="ForVideos" @bind="categoryFilter.ForVideos" />
                            <label class="form-check-label" for="ForVideos">For Videos</label>
                        </div>

                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="Visible" @bind="categoryFilter.Visible" />
                            <label class="form-check-label" for="Visible">Visible</label>
                        </div>

                    </div>

                    <div class="card-footer">
                        <button type="button" class="btn btn-primary" @onclick="SearchForCategories">فلترة</button>
                        <button type="button" class="btn btn-link text-danger" @onclick="Clear">حذف الفلتر <i class="fas fa-backspace"></i></button>
                    </div>
                </div>

            </EditForm>


        </div>
    </div>
</div>



@code {
    private CategoryFilter categoryFilter = new CategoryFilter();



    ICollection<Category> categories { get; set; }

    private int totalAmountPages;


    protected async override Task OnInitializedAsync()
    {
        //await authorizer.SetAuthorizationAsync();
        

        await LoadCategories();
    }

    async Task LoadCategories()
    {
        try
        {
            var paginatedResponse = await notAuthorizedRepositories.CategoriesRepository.GetFiltered(categoryFilter);
            categories = paginatedResponse.Response;
            totalAmountPages = paginatedResponse.TotalAmountPages;
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }
    }

    async Task DeleteCategory(int categoryId)
    {
        var category = categories.First(x => x.Id == categoryId);
        if (await js.Confirm("تأكيد", $"هل أنت متأكد أنك تريد أن تحذف {category.Name} ؟", SweetAlertMessageType.error))
        {
            await authorizedRepositories.CategoriesRepository.Delete(categoryId);
            await LoadCategories();
        }
    }

    private async Task SelectedPage(int page)
    {
        categoryFilter.Pagination.Page = page;
        await LoadCategories();
    }




    private async Task SearchForCategories()
    {

        await LoadCategories();
    }

    private async Task Clear()
    {
        categoryFilter.Name = "";
        categoryFilter.ForImages = false;
        categoryFilter.ForQuotes = false;
        categoryFilter.ForVideos = false;
        await LoadCategories();
    }

    private async Task NameKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SearchForCategories();
        }
    }
}
