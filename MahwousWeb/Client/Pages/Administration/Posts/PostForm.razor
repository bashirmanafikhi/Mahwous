@using System.IO

    <EditForm Model="Post" OnValidSubmit="@OnDataAnnotationsValidated">

        <DataAnnotationsValidator />

        <div class="form-group">
            <label for="Name">العنوان:</label>
            <div>
                <RadzenTextBox @bind-Value="Post.Title" Placeholder="عنوان المنشور" />
                <span class="text-danger"><ValidationMessage For="@(() => Post.Title)" /></span>
            </div>
        </div>


        <div class="form-group">
            <label for="Content">محتوى المنشور:</label><br />
            <RadzenTextArea Cols="30" Placeholder="اكتب المحتوى هنا..." @bind-Value="@Post.Content" />
            <span class="text-danger"><ValidationMessage For="@(() => Post.Content)" /></span>
        </div>

        <div class="form-group">
            <InputImage Label="صورة المنشور" OnSelectedImage="PictureSelected" />
            <span class="text-danger"><ValidationMessage For="@(() => Post.ImagePath)" /></span>
        </div>

        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="Visible" @bind="Post.Visible" />
            <label class="form-check-label" for="Visible">مرئي</label>
            <span class="text-danger"><ValidationMessage For="@(() => Post.Visible)" /></span>
        </div>

        <br />


        <a href="administration/posts" class="btn btn-danger">
            رجوع
        </a>

        <button type="submit" class="btn btn-info">
            @ButtonText
        </button>

    </EditForm>

@code {
    [Parameter] public Post Post { get; set; }
    [Parameter] public string ButtonText { get; set; } = "حفظ";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private async Task OnDataAnnotationsValidated()
    {
        await OnValidSubmit.InvokeAsync(null);
    }


    protected override void OnInitialized()
    {
        Post.ImagePath = null;
    }

    private void PictureSelected(string imageBase64)
    {
        Post.ImagePath = imageBase64;
    }
}