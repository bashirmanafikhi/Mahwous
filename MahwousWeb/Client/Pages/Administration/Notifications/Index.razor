
@page "/administration/notifications"
@layout AdminLayout
@attribute [Authorize]

@inject IJSRuntime js
@inject NavigationManager navigation
@inject INotificationRepository notificationRepository
@inject HttpAuthorizer authorizer

<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item"><a href="">الصفحة الرئيسية</a></li>
    <li class="breadcrumb-item"><a href="administration">الإدارة</a></li>
    <li class="breadcrumb-item active">الإشعارات</li>
</ol>


<div class="container">
    <div class="row">

        <div class="col-lg-9">

            <div class="card">
                <div class="card-header">
                    <Pagination CurrentPage="@paginationDTO.Page" TotalAmountPages="totalAmountPages"
                                SelectedPage="SelectedPage" />
                </div>

                <div class="card-body">

                    <div>

                        @if (notifications == null)
                        {
                            <p>جاري تحميل الإشعارات...</p>
                        }
                        else if (notifications.Count == 0)
                        {
                            <p> لا يوجد اشعارات! </p>
                        }
                        else
                        {
                            <div class="card-columns">
                                @foreach (var notification in notifications)
                                {
                                    <div class="card">
                                        <div class="card-header">
                                            <p class="card-title text-bold">
                                                @notification.Title
                                            </p>
                                        </div>
                                        <div class="card-body">
                                            <p class="card-text">
                                                @notification.Content
                                            </p>
                                        </div>
                                        <div class="card-footer">
                                            <p class="card-text text-secondary">
                                                @notification.Date
                                            </p>
                                            <div class="stats">
                                                <button class="btn btn-danger" @onclick="@(() => DeleteNotification(notification.Id))">حذف</button>
                                                @*<a class="btn btn-info" href="administration/notifications/edit/@notification.Id">تعديل</a>*@
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                        }
                    </div>

                </div>

                <div class="card-footer">
                    <Pagination CurrentPage="@paginationDTO.Page" TotalAmountPages="totalAmountPages"
                                SelectedPage="SelectedPage" />
                </div>
            </div>

        </div>


        <div class="col-lg-3">
            <a href="administration/notifications/create" class="btn btn-primary btn-block mb-3">اضافة اشعار جديد</a>
        </div>
    </div>
</div>




@code {

    List<MahwousWeb.Shared.Models.Notification> notifications { get; set; }

    PaginationDTO paginationDTO = new PaginationDTO();
    int totalAmountPages;


    protected async override Task OnInitializedAsync()
    {
        await authorizer.SetAuthorizationAsync();
        await LoadNotifications();
    }

    async Task LoadNotifications()
    {
        try
        {
            var paginatedResponse = await notificationRepository.GetNotifications(paginationDTO);
            notifications = paginatedResponse.Response;
            totalAmountPages = paginatedResponse.TotalAmountPages;

        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }
    }

    async Task DeleteNotification(int notificationId)
    {
        var notification = notifications.First(x => x.Id == notificationId);
        if (await js.Confirm("تأكيد", $"هل أنت متأكد أنك تريد أن تحذف {notification.Title} ؟", SweetAlertMessageType.error))
        {
            await notificationRepository.Delete(notificationId);
            await LoadNotifications();
        }
    }

    private async Task SelectedPage(int page)
    {
        await LoadNotifications();
    }
}


