@using System.IO
@inject MahwousRepositories repositories

<EditForm Model="Notification" OnValidSubmit="@OnDataAnnotationsValidated">

    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="Name">عنوان الإشعار:</label>
        <div>
            <RadzenTextBox @bind-Value="Notification.Title" Placeholder="عنوان الإشعار" />
            <span class="text-danger"><ValidationMessage For="@(() => Notification.Title)" /></span>
        </div>
    </div>


    <div class="form-group">
        <label for="Content">نص الإشعار:</label><br />
        <RadzenTextArea Placeholder="اكتب النص هنا..." @bind-Value="@Notification.Description" />
        <span class="text-danger"><ValidationMessage For="@(() => Notification.Description)" /></span>
    </div>

    <div class="form-group">
        <label for="Name">معلومات للبرنامج:</label>
        <div>
            <RadzenTextArea @bind-Value="Notification.ReturningData" Placeholder="معلومات للبرنامج" />
            <span class="text-danger"><ValidationMessage For="@(() => Notification.ReturningData)" /></span>
        </div>
    </div>

    <div>
        <label>عدد الإشعارات</label>
        <input type="number" class="form-control" min="0" max="100"
               @bind-value="Notification.BadgeNumber" @bind-value:event="oninput" />
    </div>


    <div class="form-check">
        <input type="checkbox" class="form-check-input" id="WithoutCategory" @bind="Notification.IsScheduled" />
        <label class="form-check-label" for="WithoutCategory">جدولة الإرسال في وقت معين</label>
    </div>

    @if (Notification.IsScheduled)
    {
<div class="form-group">
    <label for="Date">وقت الإرسال</label>
    <input type="datetime-local" class="form-control" id="Date" placeholder="وقت الإرسال"
           @bind-value="Notification.Date" @bind-value:event="oninput" />


</div>
    }


    <div class="form-group">
        <label for="Categories">تطبيقات</label>
        <RadzenDropDown class="form-control"
                        AllowClear="true"
                        AllowFiltering="true"
                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                        @bind-Value="selectedAppsIds"
                        Multiple="true"
                        Placeholder="اختر تطبيق..."
                        Data="@Apps"
                        TextProperty="Name"
                        ValueProperty="Id" />
    </div>



    <br />


    <a href="administration/notifications" class="btn btn-danger">
        رجوع
    </a>

    <button type="submit" class="btn btn-info">
        @ButtonText
    </button>

</EditForm>

@code {
    [Parameter] public Notification Notification { get; set; }
    [Parameter] public string ButtonText { get; set; } = "حفظ";
    [Parameter] public EventCallback OnValidSubmit { get; set; }



    public ICollection<MahwousWeb.Shared.Models.App> Apps { get; set; }

    IEnumerable<int> selectedAppsIds = new int[] { };





    protected async override Task OnInitializedAsync()
    {
        Apps = await repositories.AppsRepository.GetAll();
    }

    protected override void OnParametersSet()
    {
        if (Notification?.NotificationApps != null)
        {
            selectedAppsIds = Notification.NotificationApps.Select(na => na.AppId);
        }
    }


    private async Task OnDataAnnotationsValidated()
    {

        Notification.NotificationApps = selectedAppsIds?
        .Select(x => new NotificationApps { AppId = x })?.ToList();



        await OnValidSubmit.InvokeAsync(null);
    }
}