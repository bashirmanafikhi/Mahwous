@page "/administration/videos/create"
@layout AdminLayout
@attribute [Authorize]
@inject MahwousRepositories repositories
@inject NavigationManager navigation
@using Mahwous.Service.ViewModels.VideoStatuses;


<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">فيديو جديد</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item active">اضافة فيديو</li>
                    <li class="breadcrumb-item"><a href="administration/videos">الفيديوهات</a></li>
                    <li class="breadcrumb-item"><a href="administration">الإدارة</a></li>
                    <li class="breadcrumb-item"><a href="">الصفحة الرئيسية</a></li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="container-fluid">


        @if (NotSelectedCategories != null)
        {
            <VideoForm ButtonText="إضافة فيديو" Video="video"
                       OnValidSubmit="@((args)=> CreateVideo(args.Item1,args.Item2))" NotSelectedCategories="NotSelectedCategories" />

        }


    </div>
</div>





@code {


    VideoStatus video = new VideoStatus();


    private List<Category> NotSelectedCategories;

    protected override async Task OnInitializedAsync()
    {
        CategoryFilter filter = new CategoryFilter();
        filter.ForVideos = true;
        NotSelectedCategories = await repositories.CategoriesRepository.List(filter);


        // to give tokens to api :)
        //await authorizer.SetAuthorizationAsync();
    }

    async Task CreateVideo(Stream coverFile,Stream videoFile)
    {


        try
        {
            CreateVideoStatusCommand command = new CreateVideoStatusCommand()
            {
                Cover = coverFile,
                Video = videoFile,
                Title = video.Title
            };
            await repositories.VideoStatusRepository.Create(command);
            navigation.NavigateTo("administration/videos");

        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }
    }
}