@page "/administration/apps/edit/{appId:int}"
@layout AdminLayout
@attribute [Authorize]
@inject MahwousRepositories repositories
@inject NavigationManager navigation
@using Mahwous.Service.ViewModels.MobileApps

<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">تعديل التطبيق</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item active">تعديل التطبيق</li>
                    <li class="breadcrumb-item"><a href="administration/apps">التطبيقات</a></li>
                    <li class="breadcrumb-item"><a href="administration">الإدارة</a></li>
                    <li class="breadcrumb-item"><a href="">الصفحة الرئيسية</a></li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="container-fluid">


        @*<AppForm ButtonText="تعديل" App="app" OnValidSubmit="@EditApp" />*@

    </div>
</div>

@code {
    [Parameter] public int appId { get; set; }
    GetMobileAppDetailsResponse app = new GetMobileAppDetailsResponse();

    protected override async Task OnInitializedAsync()
    {
        // to give tokens to api :)
        //await authorizer.SetAuthorizationAsync();
    }

    protected async override Task OnParametersSetAsync()
    {
        app = await repositories.MobileAppsRepository.GetDetails(appId);
    }

    async Task EditApp(Stream coverFile)
    {
        try
        {
            // todo complete this properties
            UpdateMobileAppCommand command = new UpdateMobileAppCommand
            {
                Id = app.Id,
                Name = app.Name,
                AppleStoreLink = app.AppleStoreLink,
                Description = app.Description,
                PlayStoreLink = app.PlayStoreLink,
                Package = app.Package,
                Cover = coverFile
            };
            await repositories.MobileAppsRepository.Update(command);
            navigation.NavigateTo("administration/apps");

        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }
    }
}
