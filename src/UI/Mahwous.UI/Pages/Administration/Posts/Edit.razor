@page "/administration/posts/edit/{postId:int}"
@layout AdminLayout
@attribute [Authorize]
@inject MahwousRepositories repositories
@inject NavigationManager navigation
@using Mahwous.Service.ViewModels.Posts



<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">تعديل المنشور</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item active">تعديل المنشور</li>
                    <li class="breadcrumb-item"><a href="administration/posts">المنشورات</a></li>
                    <li class="breadcrumb-item"><a href="administration">الإدارة</a></li>
                    <li class="breadcrumb-item"><a href="">الصفحة الرئيسية</a></li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="container-fluid">


        <PostForm ButtonText="تعديل المنشور" Post="post" OnValidSubmit="@EditPost" />

    </div>
</div>

@code {
    [Parameter] public int postId { get; set; }
    Post post = new Post();

    protected override async Task OnInitializedAsync()
    {
        // to give tokens to api :)
        //await authorizer.SetAuthorizationAsync();
    }

    protected async override Task OnParametersSetAsync()
    {
        post = await repositories.PostRepository.GetDetails(postId);
    }

    async Task EditPost(Stream imageFile)
    {
        try
        {
            UpdatePostCommand command = new UpdatePostCommand();
            command.Id = post.Id;
            command.Title = post.Title;
            command.Content = post.Content;
            command.Cover = imageFile;
            await repositories.PostRepository.Update(command);
            navigation.NavigateTo("administration/posts");

        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }
    }
}
